@startuml

state DisplayBall {
    [*] --> WaitEvent_B

    WaitEvent_B : Wait for wall event
    WaitEvent_B -> MoveBall : **wallCreated**

    MoveBall : Move the ball\naccording the tilt\nof the board
    MoveBall -up-> MoveBall : Ball inside\nthe board\nand didn't\nhit the wall
    MoveBall --> EraseBall :  Ball Moved\nOutside The Board
    MoveBall --> WaitEvent_B : Ball Hit The wall\nor\n**wallErased**

    EraseBall : Ball erasing
    EraseBall -up-> EraseBall : BallErasing
    EraseBall --> WaitEvent_B : BallErased

}

state DisplayWall {
    [*] --> CreateWall

    CreateWall : Create a wall on a random side
    CreateWall --> FixWall : wallCreated

    FixWall : Display the wall at its position
    FixWall -up-> FixWall : timeout\nBefore\nWall Blinking\nIs Not Over
    FixWall --> BlinkWall : timeout\nBefore\nWall Blinking\nIs Over
    FixWall ->  WaitEvent_W : **ballHitTheWall**\nor\n**ballErased**
    
    BlinkWall -up-> BlinkWall : wallBlinking
    BlinkWall --> EraseWall : timeout\nWall Blinking\nIs Over
    BlinkWall ->  WaitEvent_W : **ballHitTheWall**\nor\n**ballErased**

    EraseWall -up-> EraseWall : wallErasing
    EraseWall --> WaitEvent_W : WallErased
    EraseWall ->  WaitEvent_W : **ballHitTheWall**\nor\n**ballErased**
    
    WaitEvent_W : Wait for game event
    WaitEvent_W -> CreateWall : **winAnimationIsOver**
}

state Game {
    [*] --> WaitEvent_G

    WaitEvent_G : Wait for ball and wall events
    WaitEvent_G --> GameOverAnimation : **wallErased**
    WaitEvent_G --> GameOverAnimation : **ballErased**

    WaitEvent_G --> WinAnimation : **ballHitTheWall**

    WinAnimation : Added points to the game score
    WinAnimation -up-> WinAnimation : winAnimation\nIs Not Over
    WinAnimation --> WaitEvent_G : winAnimation\nIs Over

    GameOverAnimation -up-> GameOverAnimation : gameOverAnimation\nIs Not Over
    GameOverAnimation --> DisplayScore : gameOverAnimation\nIs Over

    DisplayScore --> [*]
}

@enduml
