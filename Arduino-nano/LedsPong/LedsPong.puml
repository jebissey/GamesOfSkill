@startuml

state Ball {
    [*] --> Wait_B

    Wait_B -> MoveBall : **IsGameStarting**

    MoveBall : Move the ball\naccording the tilt\nof the board
    MoveBall -up-> MoveBall : Ball inside\nthe board\nand didn't\nhit the wall
    MoveBall --> EraseBall :  BallMovedOutsideTheBoard
    MoveBall --> Wait_B : BallHitTheWall\nor\n**IsGameEnding**

    EraseBall -up-> EraseBall : Ball erasing
    EraseBall --> Wait_B : BallErased

}

state Wall {
    [*] --> Wait_W
        
    Wait_W -> CreateWall : **IsGameStarting**

    CreateWall : Create a wall on a random side
    CreateWall --> FixWall : wallCreated

    FixWall : Display the wall at its position
    FixWall -up-> FixWall : Timeout\nbefore\nwall blinking\nis not over
    FixWall --> BlinkWall : timeoutBeforeWallBlinkingIOver
    FixWall ->  Wait_W : **IsGameEnding**
    
    BlinkWall -up-> BlinkWall : Wall blinking
    BlinkWall --> EraseWall : timeoutWallBlinkingIsOver
    BlinkWall ->  Wait_W : **IsGameEnding**

    EraseWall -up-> EraseWall : Wall erasing
    EraseWall --> Wait_W : WallErased
    EraseWall ->  Wait_W : **IsGameEnding**
}

state Game {
    [*] -up-> Start

    Start --> Gaming : boardShacked
    Start -up-> Start : Start animation

    Gaming : Wait for ball and wall events
    Gaming --> GameOverAnimation : **wallErased**\nor\n**ballErased**
    Gaming --> DisplayScore : MaxScoreReached

    Gaming --> WinAnimation : **ballHitTheWall**

    WinAnimation : Added points to the game score
    WinAnimation -up-> WinAnimation : Win animation is not over
    WinAnimation --> Gaming : winAnimationIsOver

    GameOverAnimation -up-> GameOverAnimation : Game over animation\nis not over
    GameOverAnimation --> DisplayScore : gameOverAnimationIsOver

    DisplayScore --> Start : boardShacked
}

@enduml
